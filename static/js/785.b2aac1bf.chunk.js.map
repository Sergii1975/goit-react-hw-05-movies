{"version":3,"file":"static/js/785.b2aac1bf.chunk.js","mappings":"yNAqCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAEyBC,EAAAA,EAAAA,IAAkBN,GAF3C,OAEUO,EAFV,OAGIH,EAAUG,GAHd,gDAKIC,QAAQC,IAAR,MALJ,0DAFc,sBACTT,GADS,mCAUdU,EACD,GAAE,CAACV,KAEI,8BACLG,EAAOQ,OAAS,GACf,wBACGR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,0BACGD,IAAU,qCAAaA,KACvBC,IAAW,uBAAIA,MAFTF,EADC,OAMX,sCAGR,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieReviews } from \"services/API\";\n// import css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n    \n  useEffect(() => {\n    if (!movieId) return;\n    async function fetchReview() {\n      try {\n        const Review = await fetchMovieReviews(movieId);\n        setReview(Review);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReview();\n  }, [movieId]);\n\n  return (<>\n    {review.length > 0 ? (\n      <ul>\n        {review.map(({ id, author, content }) =>\n          <li key={id}>\n            {author && <h3>Author: {author}</h3>}\n            {content && <p>{content}</p>}\n          </li>)}\n      </ul>\n    ) : (<p>No review</p>)}\n  </>\n  )\n};\n\n\nexport default Reviews;"],"names":["movieId","useParams","useState","review","setReview","useEffect","fetchMovieReviews","Review","console","log","fetchReview","length","map","id","author","content"],"sourceRoot":""}